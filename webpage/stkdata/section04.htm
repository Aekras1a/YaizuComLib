<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="content-style-type" content="text/css">
<link rel="stylesheet" href="./style.css" type="text/css">
</HEAD>

<div id="container">

<H1>4. データモデル</H1>
StkDataが扱うデータモデルには，大きく分けて下記の２種類があります。<BR>
<TABLE BORDER="1">
<TR><TD>テーブル定義用データモデル</TD>
<TD>TableDef<BR>ColumnDef<BR>ColumnDefInt<BR>ColumnDefStr<BR>ColumnDefWStr<BR>ColumnDefBin<br>ColumnDefFloat</TD></TR>
<TR><TD>データアクセス用データモデル</TD>
<TD>RecordData<BR>ColumnData<BR>ColumnDataInt<BR>ColumnDataStr<BR>ColumnDataWStr<BR>ColumnDataBin<br>ColumnDataFloat</TD></TR>
</TABLE>
<P>

テーブル定義用データモデルのクラス関連図（データモデル関連図）は下図のようになります。<BR>
TableDefはテーブルを定義するデータモデルで，ColumnDefを集約します。
ColumnDefはカラムを定義するデータモデルで，整数型カラム(ColumnDefInt)，文字列型カラム(ColumnDefStr)，
ワイド文字列型カラム(ColumnDefWStr)，バイナリ型カラム(ColumnDefBin)，単精度浮動小数点数型カラム(ColumnDefFloat)
に派生します。<BR>
<IMG SRC="stkdata3.gif"><P>
また，データアクセス用データモデルのクラス関連図は下図のようになります。<BR>
RecordDataはレコードを示すデータモデルで，ColumnDataを集約します。
ColumnDataはカラムを示すデータモデルで，整数型カラム(ColumnDataInt)，文字列型カラム(ColumnDataStr)，
ワイド文字列型カラム(ColumnDataWStr)，バイナリ型カラム(ColumnDataBin)，単精度浮動小数点数型カラム(ColumnDataFloat)
に派生します。<BR>
StkDataが公開するAPIは，1つの関数呼び出しで複数のレコード操作を行うことから，
RecordDataは線形リスト型のデータ構造となります。複数のRecordDataを扱うときは，RecordDataインスタンスが別の
RecordDataインスタンスへのポインタを保持するようにします。
<IMG SRC="stkdata4.gif"><P>

</div>
</BODY>
